# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  config.vm.box = "debian/jessie64"

  config.vm.provision :ansible do |ansible|
    ansible.playbook = "plays/all.yml"
    if ENV['SKIP_GALAXY_INSTALL'] == 'YES'
      # Do something (not likely, we are simply skipping)
    else
      ansible.galaxy_role_file="plays/ansible-roles.txt"
    end
  end

  # Consul VM, used by microservices for registration and
  # service discovery. This is only meant for educational
  # purposes, consul should always be clusterized!
  config.vm.define "consul" do |consul|
    consul.vm.hostname = "consul"
    consul.vm.network "private_network", ip: "192.168.33.10"
    consul.vm.provider "virtualbox" do |vb|
        vb.memory = "256"
    end
  end

  # Define Jenkins virtual machine. This will run the jobs
  # on our behalf, that deploy all microservices.
  config.vm.define "jenkins" do |jenkins|
    jenkins.vm.hostname = "jenkins"
    jenkins.vm.network "private_network", ip: "192.168.33.50"
    jenkins.vm.provider "virtualbox" do |vb|
      vb.memory = "1024"
    end
  end

  # Define VM where docker containers are build (and ran, for the moment).
  config.vm.define "lego" do |lego|
    lego.vm.hostname = "lego"
    lego.vm.network "private_network", ip: "192.168.33.100"
    lego.vm.provider "virtualbox" do |vb|
      vb.memory = "1536"
    end
    lego.vm.provision "shell", inline: "sudo mkdir -p /etc/systemd/system/docker.service.d"
    lego.vm.provision "file", source: "tcp.conf", destination: "/tmp/tcp.conf"
    lego.vm.provision "shell", inline: "sudo mv /tmp/tcp.conf /etc/systemd/system/docker.service.d/tcp.conf"
    # Provide a simple docker host without any TLS
    lego.vm.provision "docker"
  end

end
